// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(uuid())
  email    String  @unique
  username String  @unique
  password String
  avatar   String?

  chats    ChatParticipant[]
  messages Message[]
}

model Chat {
  id      String  @id @unique @default(uuid())
  isGroup Boolean @default(false)
  name    String?

  participants ChatParticipant[]
  messages     Message[]
}

model ChatParticipant {
  id     String @id @unique @default(uuid())
  userId String
  chatId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @unique @default(uuid())
  content   String
  senderId  String?
  chatId    String
  createdAt DateTime @default(now())

  sender User? @relation(fields: [senderId], references: [id], onDelete: SetNull)
  chat   Chat  @relation(fields: [chatId], references: [id], onDelete: Cascade)
}
